								   variables:

			environmental/system:                 user:

			defined by sys/Admin user			defined by user
			per sys(Global)						per user

			Capital letters						small letters
			e.g.  USER
			
			/etc			    (var)			/home/user
	bash.bashrc profile bashrc	(functions)	.bashrc .profile .bash_profile		
								(Alias)
			VAR=value							var=value
			
			echo $VAR							echo $var	

			env										set
											var    			functions
										sys 	user		sys    user
set | wc -l
set | grep fname
set | grep ^[a-z]
set | grep ^[a-z] | grep -v "()"
set | grep ^[a-z] | grep "="
all sys variables : set | grep -i ^[a-z] | grep "="
set | grep ^[A-Z]

add:
alias uservar='set | grep -i ^[a-z] | grep "="'
sudo vi /etc/profile

set | grep ^[A-Z] | grep "="

free_mem=free -m | grep Mem | awk '{print $4}'
		echo $free_mem
		
read var1 ,  read creates empty variable and waits to input the vaule
read -p "please enter ur email: " var1

sudo vi user_data.sh
#!/bin/bash
read -p "Please enter your first name: " fname
read -p "Please enter your last name: " lname
read -p "Please enter your phone: " phone
read -p "Please enter your email: " email
echo "$fname:$lname:$phone:$email" >> user_data.txt

sudo chmod +x user_data.txt
./user_data.txt

sudo vi calc.sh
#!/bin/bash
read -p "Please select math operation: " operation
read -p "Please enter ur first number: " value1
read -p "Please enter ur second number: " value2
echo "result of $value $operation $value2 = $(($value $operation $value2))"

sudo chmod +x calc.sh
./calc.sh

Functions in script:

repeat check load + apply action

function :     name   =   code
         (job name,object)
		 
		 
sudo vi function.sh
#!/bin/bash

check_mem (){
		echo "------------------"
		echo "print FreeMem space"
		free_mem=$(free -m | grep Mem | awk '{print $4}')
		echo $free_mem
		echo "------------------"
}
check_mem
pwd
id
check_mem
hostname
date
check_mem

sudo find / -name "*.sh"

Condition:
----------
					if (Basic)								if + elif

				if	[ condition ]						if [ condition1 ]
				then                   					then
					tasks									tasks
				else									elif [ condition2 ]
					another task						then
				fi											task
														elif [ condition3 ]
														then
															tasks
														else
															another tasks
														fi
														
operators:				option			 symbol
----------
equal					-eq				=
not equal				-ne				!=
greater than 			-gt				>
less than				-lt				<
greater than or equal	-ge				>=
less than or equal		-le				<=

#!/bin/bash

read -p "plz enter ur code" code
if [$code -eq 0]
then
	echo "this code for Admin"
	
	ls --color
elif [$code -eq 1000]
then
		echo "this code for dev"
		ls /usr --color
elif [$code -ge 2000]
then	
		echo "$code, this code for testers"
else
		echo "$code, this doesn't exist"
fi
---------------------------------------------------
#!/bin/bash

read -p "plz enter ur code" code
if [$code -eq 0] || [$code -le 300]
then
	echo "this code for Admin"
	ls --color
elif [$code -eq 1000]
then
		echo "this code for dev"
		ls /usr --color
elif [$code -ge 2000]
then	
		echo "$code, this code for testers"
else
		echo "$code, this doesn't exist"
fi
---------------------------------------------------
#!/bin/bash

read -p "plz enter ur code" code
if [$code -eq 0] && [$USER = "oracle"]
then
	echo "this code for Admin"
	ls --color
elif [$code -eq 1000]
then
		echo "this code for dev"
		ls /usr --color
elif [$code -ge 2000]
then	
		echo "$code, this code for testers"
else
		echo "$code, this doesn't exist"
fi
------------------------------------------------------

Loop:
-----
			Limited					unlimited
			(for)					(while)



for var in value 1 2 3 4			while [condition]							
do									do
	task $var							task								
done								done
									


while [true]
do 
		read -p "Please select math operation: " operation
	read -p "Please enter ur first number: " value1
	read -p "Please enter ur second number: " value2
	echo "result of $value $operation $value2 = $(($value $operation $value2))"
	echo "---------------------------------------------------"
done

#!/bin/bash
x=1
while [$x -le 4]
do 
		read -p "Please select math operation: " operation
	read -p "Please enter ur first number: " value1
	read -p "Please enter ur second number: " value2
	echo "result of $value $operation $value2 = $(($value $operation $value2))"
	echo "---------------------------------------------------"
	lets x=$x+1
done

seq 1 10
1
2
3
.
.
10


#!/bin/bash
for users in seq 1 5
do 
	#sudo userdel -r user$users
	useradd -md /home/user$users user$users
	#echo "user$user" | passwd --stdin user$users
	sudo passwd -e user$users
	echo "user$users Created"
done


Amer:
----
#!/bin/bash
for i in {1..5}
do
    USERNAME="user$i"
    PASSWORD="user$i"
    sudo useradd -m "$USERNAME"
    echo "$USERNAME:$PASSWORD" | sudo chpasswd
    echo "Created user: $USERNAME with password: $PASSWORD"
done
