apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-01-18T19:24:03Z"
    generateName: prometheus-6c66c4d9cf-
    labels:
      app: prometheus
      pod-template-hash: 6c66c4d9cf
    name: prometheus-6c66c4d9cf-c98dk
    namespace: prometheus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: prometheus-6c66c4d9cf
      uid: f089f4c2-7622-4243-bd0d-4226e7aa99b4
    resourceVersion: "722383"
    uid: 819f5d8e-2c79-4921-ade2-82024ed3ea57
  spec:
    containers:
    - args:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      image: prom/prometheus:latest
      imagePullPolicy: Always
      name: prometheus
      ports:
      - containerPort: 9090
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/prometheus/
        name: prometheus-config-volume
      - mountPath: /prometheus
        name: prometheus-data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4mvxn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker02
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: prometheus-config
      name: prometheus-config-volume
    - name: prometheus-data
      persistentVolumeClaim:
        claimName: prometheus-pv-claim
    - name: kube-api-access-4mvxn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-24T22:23:00Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-01-18T19:25:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-24T22:23:00Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-24T22:23:00Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-01-18T19:25:58Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9227e7d3d92bba7fd0839c68d55d71b61ba3d751ef97fa2f66ad0bbb465f3fdf
      image: docker.io/prom/prometheus:latest
      imageID: docker.io/prom/prometheus@sha256:339ce86a59413be18d0e445472891d022725b4803fab609069110205e79fb2f1
      lastState:
        terminated:
          containerID: containerd://da958fa2c05a845164deda76a476474fc4ef709e9f446f0d4adef3b0e2c6a46e
          exitCode: 255
          finishedAt: "2025-04-24T22:08:12Z"
          reason: Unknown
          startedAt: "2025-04-24T21:33:07Z"
      name: prometheus
      ready: true
      restartCount: 7
      started: true
      state:
        running:
          startedAt: "2025-04-24T22:22:59Z"
    hostIP: 192.168.2.152
    hostIPs:
    - ip: 192.168.2.152
    phase: Running
    podIP: 10.36.0.8
    podIPs:
    - ip: 10.36.0.8
    qosClass: BestEffort
    startTime: "2025-01-18T19:25:59Z"
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"prometheus-service","namespace":"prometheus"},"spec":{"ports":[{"nodePort":32002,"port":9090,"protocol":"TCP","targetPort":9090}],"selector":{"app":"prometheus"},"type":"NodePort"}}
    creationTimestamp: "2025-01-15T00:20:23Z"
    name: prometheus-service
    namespace: prometheus
    resourceVersion: "16380"
    uid: c0dd0079-744f-49fa-8638-cd1f3a2b62b8
  spec:
    clusterIP: 10.110.135.241
    clusterIPs:
    - 10.110.135.241
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 32002
      port: 9090
      protocol: TCP
      targetPort: 9090
    selector:
      app: prometheus
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"prometheus","namespace":"prometheus"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"prometheus"}},"template":{"metadata":{"labels":{"app":"prometheus"}},"spec":{"containers":[{"args":["--config.file=/etc/prometheus/prometheus.yml","--storage.tsdb.path=/prometheus"],"image":"prom/prometheus:latest","name":"prometheus","ports":[{"containerPort":9090}],"volumeMounts":[{"mountPath":"/etc/prometheus/","name":"prometheus-config-volume"},{"mountPath":"/prometheus","name":"prometheus-data"}]}],"volumes":[{"configMap":{"name":"prometheus-config"},"name":"prometheus-config-volume"},{"name":"prometheus-data","persistentVolumeClaim":{"claimName":"prometheus-pv-claim"}}]}}}}
    creationTimestamp: "2025-01-15T00:20:23Z"
    generation: 1
    name: prometheus
    namespace: prometheus
    resourceVersion: "723667"
    uid: 15123eeb-9281-49ec-95da-b3e9a8eeeee7
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: prometheus
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: prometheus
      spec:
        containers:
        - args:
          - --config.file=/etc/prometheus/prometheus.yml
          - --storage.tsdb.path=/prometheus
          image: prom/prometheus:latest
          imagePullPolicy: Always
          name: prometheus
          ports:
          - containerPort: 9090
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/prometheus/
            name: prometheus-config-volume
          - mountPath: /prometheus
            name: prometheus-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: prometheus-config
          name: prometheus-config-volume
        - name: prometheus-data
          persistentVolumeClaim:
            claimName: prometheus-pv-claim
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-01-15T00:20:23Z"
      lastUpdateTime: "2025-01-15T00:20:27Z"
      message: ReplicaSet "prometheus-6c66c4d9cf" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-04-24T22:35:15Z"
      lastUpdateTime: "2025-04-24T22:35:15Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-01-15T00:20:23Z"
    generation: 1
    labels:
      app: prometheus
      pod-template-hash: 6c66c4d9cf
    name: prometheus-6c66c4d9cf
    namespace: prometheus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus
      uid: 15123eeb-9281-49ec-95da-b3e9a8eeeee7
    resourceVersion: "723653"
    uid: f089f4c2-7622-4243-bd0d-4226e7aa99b4
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: prometheus
        pod-template-hash: 6c66c4d9cf
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: prometheus
          pod-template-hash: 6c66c4d9cf
      spec:
        containers:
        - args:
          - --config.file=/etc/prometheus/prometheus.yml
          - --storage.tsdb.path=/prometheus
          image: prom/prometheus:latest
          imagePullPolicy: Always
          name: prometheus
          ports:
          - containerPort: 9090
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/prometheus/
            name: prometheus-config-volume
          - mountPath: /prometheus
            name: prometheus-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: prometheus-config
          name: prometheus-config-volume
        - name: prometheus-data
          persistentVolumeClaim:
            claimName: prometheus-pv-claim
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
kind: List
metadata:
  resourceVersion: ""
