apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-02-24T23:42:32Z"
    generateName: vaultwarden-5dc4f454db-
    labels:
      app: vaultwarden-server
      pod-template-hash: 5dc4f454db
    name: vaultwarden-5dc4f454db-5qr69
    namespace: vaultwarden
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: vaultwarden-5dc4f454db
      uid: ad9b4745-de0e-4c29-8610-481b6a406339
    resourceVersion: "722420"
    uid: 4ab7b997-5aef-4e00-8427-8139c47a81f9
  spec:
    containers:
    - env:
      - name: ROCKET_PORT
        value: "80"
      image: vaultwarden/server:latest
      imagePullPolicy: Always
      name: vaultwarden
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data
        name: vaultwarden-data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cxsvz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker02
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: vaultwarden-data
      persistentVolumeClaim:
        claimName: vaultwarden-pv-claim
    - name: kube-api-access-cxsvz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-24T22:22:52Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-24T23:42:32Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-24T22:22:52Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-24T22:22:52Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-24T23:42:32Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1edb5ebfbdfff8cefcbefa2815698bea25aa676ec98b9c06a6fea3c2ab90622a
      image: docker.io/vaultwarden/server:latest
      imageID: docker.io/vaultwarden/server@sha256:87edb99945da91bd7504ac1435495595af2e89ad2c7adc151ae5bf091ec8baf2
      lastState:
        terminated:
          containerID: containerd://f4a3783ae08bc6b5ae378c5c3440b8e6c0d354b1bae358d66a2037fceeb04eaa
          exitCode: 255
          finishedAt: "2025-04-24T22:08:13Z"
          reason: Unknown
          startedAt: "2025-04-24T21:33:14Z"
      name: vaultwarden
      ready: true
      restartCount: 5
      started: true
      state:
        running:
          startedAt: "2025-04-24T22:22:51Z"
    hostIP: 192.168.2.152
    hostIPs:
    - ip: 192.168.2.152
    phase: Running
    podIP: 10.36.0.22
    podIPs:
    - ip: 10.36.0.22
    qosClass: BestEffort
    startTime: "2025-02-24T23:42:32Z"
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"vaultwarden-service","namespace":"vaultwarden"},"spec":{"ports":[{"nodePort":32001,"port":80,"protocol":"TCP","targetPort":80}],"selector":{"app":"vaultwarden-server"},"type":"NodePort"}}
    creationTimestamp: "2025-01-15T00:20:13Z"
    name: vaultwarden-service
    namespace: vaultwarden
    resourceVersion: "16326"
    uid: 380a334a-13a4-4133-a821-5428d4e396f8
  spec:
    clusterIP: 10.108.1.46
    clusterIPs:
    - 10.108.1.46
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 32001
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      app: vaultwarden-server
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"vaultwarden","namespace":"vaultwarden"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"vaultwarden-server"}},"template":{"metadata":{"labels":{"app":"vaultwarden-server"}},"spec":{"containers":[{"env":[{"name":"ROCKET_PORT","value":"80"}],"image":"vaultwarden/server:latest","name":"vaultwarden","ports":[{"containerPort":80}],"volumeMounts":[{"mountPath":"/data","name":"vaultwarden-data"}]}],"volumes":[{"name":"vaultwarden-data","persistentVolumeClaim":{"claimName":"vaultwarden-pv-claim"}}]}}}}
    creationTimestamp: "2025-01-15T00:20:13Z"
    generation: 1
    name: vaultwarden
    namespace: vaultwarden
    resourceVersion: "723705"
    uid: 9f41b154-7035-4765-8a5e-97442e13c52f
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: vaultwarden-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: vaultwarden-server
      spec:
        containers:
        - env:
          - name: ROCKET_PORT
            value: "80"
          image: vaultwarden/server:latest
          imagePullPolicy: Always
          name: vaultwarden
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: vaultwarden-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: vaultwarden-data
          persistentVolumeClaim:
            claimName: vaultwarden-pv-claim
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-01-15T00:20:13Z"
      lastUpdateTime: "2025-01-15T00:20:18Z"
      message: ReplicaSet "vaultwarden-5dc4f454db" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-04-24T22:35:24Z"
      lastUpdateTime: "2025-04-24T22:35:24Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-01-15T00:20:13Z"
    generation: 1
    labels:
      app: vaultwarden-server
      pod-template-hash: 5dc4f454db
    name: vaultwarden-5dc4f454db
    namespace: vaultwarden
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: vaultwarden
      uid: 9f41b154-7035-4765-8a5e-97442e13c52f
    resourceVersion: "723677"
    uid: ad9b4745-de0e-4c29-8610-481b6a406339
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: vaultwarden-server
        pod-template-hash: 5dc4f454db
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: vaultwarden-server
          pod-template-hash: 5dc4f454db
      spec:
        containers:
        - env:
          - name: ROCKET_PORT
            value: "80"
          image: vaultwarden/server:latest
          imagePullPolicy: Always
          name: vaultwarden
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: vaultwarden-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: vaultwarden-data
          persistentVolumeClaim:
            claimName: vaultwarden-pv-claim
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
kind: List
metadata:
  resourceVersion: ""
