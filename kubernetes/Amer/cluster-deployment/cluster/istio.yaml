apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-24T16:08:06Z"
    generateName: istio-ingressgateway-64ffb475cd-
    labels:
      app: istio-ingressgateway
      istio: ingressgateway
      pod-template-hash: 64ffb475cd
    name: istio-ingressgateway-64ffb475cd-226zr
    namespace: istio
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: istio-ingressgateway-64ffb475cd
      uid: 0db6a633-41aa-4e24-90d3-c040133debc8
    resourceVersion: "768063"
    uid: 49ea61c4-e578-4c6d-adf8-4d15fc32fc0c
  spec:
    containers:
    - env:
      - name: ISTIO_META_ROUTER_MODE
        value: standard
      - name: ISTIO_META_REQUESTED_NETWORK_VIEW
        value: network1
      image: istio/proxyv2:1.18.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz/ready
          port: 15021
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      name: istio-proxy
      ports:
      - containerPort: 8080
        protocol: TCP
      - containerPort: 8443
        protocol: TCP
      - containerPort: 15021
        protocol: TCP
      - containerPort: 15090
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz/ready
          port: 15021
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "2"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 128Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8r2bk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: master-node
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-8r2bk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-24T22:22:30Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-24T16:08:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-24T16:08:06Z"
      message: 'containers with unready status: [istio-proxy]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-24T16:08:06Z"
      message: 'containers with unready status: [istio-proxy]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-24T16:08:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://75c62edf583b137bf2decf05ff60a75339251e7d8aa731caf990c3e3eabc5687
      image: docker.io/istio/proxyv2:1.18.0
      imageID: docker.io/istio/proxyv2@sha256:757d28c241009d9125607e6e02e71954b86e5f2baabdeda0537361e9be3d2579
      lastState:
        terminated:
          containerID: containerd://75c62edf583b137bf2decf05ff60a75339251e7d8aa731caf990c3e3eabc5687
          exitCode: 0
          finishedAt: "2025-04-25T20:01:18Z"
          reason: Completed
          startedAt: "2025-04-25T20:01:17Z"
      name: istio-proxy
      ready: false
      restartCount: 120
      started: false
      state:
        waiting:
          message: back-off 5m0s restarting failed container=istio-proxy pod=istio-ingressgateway-64ffb475cd-226zr_istio(49ea61c4-e578-4c6d-adf8-4d15fc32fc0c)
          reason: CrashLoopBackOff
    hostIP: 192.168.2.150
    hostIPs:
    - ip: 192.168.2.150
    phase: Running
    podIP: 10.32.0.7
    podIPs:
    - ip: 10.32.0.7
    qosClass: Burstable
    startTime: "2025-04-24T16:08:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-24T16:07:36Z"
    generateName: istio-ingressgateway-ccd975786-
    labels:
      app: istio-ingressgateway
      istio: ingressgateway
      pod-template-hash: ccd975786
    name: istio-ingressgateway-ccd975786-nbsdn
    namespace: istio
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: istio-ingressgateway-ccd975786
      uid: 1b6ef9fa-b67e-4f8e-8f88-7da994d1faa1
    resourceVersion: "767926"
    uid: 19123e76-0a77-41e3-ab5d-20dd23d9e929
  spec:
    containers:
    - env:
      - name: ISTIO_META_ROUTER_MODE
        value: standard
      - name: ISTIO_META_REQUESTED_NETWORK_VIEW
        value: network1
      image: gcr.io/istio-release/proxyv2:1.20.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz/ready
          port: 15021
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      name: istio-proxy
      ports:
      - containerPort: 8080
        protocol: TCP
      - containerPort: 8443
        protocol: TCP
      - containerPort: 15021
        protocol: TCP
      - containerPort: 15090
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz/ready
          port: 15021
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "2"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 128Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dk47f
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-dk47f
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-24T22:22:42Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-24T16:07:57Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-24T16:07:57Z"
      message: 'containers with unready status: [istio-proxy]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-24T16:07:57Z"
      message: 'containers with unready status: [istio-proxy]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-24T16:07:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://626703f990121aee85cf5d3fa1c5cb2bf629f13914fe8038011790d5a151c5cb
      image: docker.io/istio/proxyv2:1.20.0
      imageID: docker.io/istio/proxyv2@sha256:19e8ca96e4f46733a3377fa962cb88cad13a35afddb9139ff795e36237327137
      lastState:
        terminated:
          containerID: containerd://626703f990121aee85cf5d3fa1c5cb2bf629f13914fe8038011790d5a151c5cb
          exitCode: 0
          finishedAt: "2025-04-25T19:59:43Z"
          reason: Completed
          startedAt: "2025-04-25T19:59:42Z"
      name: istio-proxy
      ready: false
      restartCount: 114
      started: false
      state:
        waiting:
          message: back-off 5m0s restarting failed container=istio-proxy pod=istio-ingressgateway-ccd975786-nbsdn_istio(19123e76-0a77-41e3-ab5d-20dd23d9e929)
          reason: CrashLoopBackOff
    hostIP: 192.168.2.151
    hostIPs:
    - ip: 192.168.2.151
    phase: Running
    podIP: 10.44.0.12
    podIPs:
    - ip: 10.44.0.12
    qosClass: Burstable
    startTime: "2025-04-24T16:07:57Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-24T16:02:58Z"
    generateName: istiod-547884f6c-
    labels:
      app: istiod
      pod-template-hash: 547884f6c
    name: istiod-547884f6c-r6lzk
    namespace: istio
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: istiod-547884f6c
      uid: c45c16c9-c3e1-4df7-97cc-56107bcb39e2
    resourceVersion: "767922"
    uid: f81d160c-efec-4634-ac60-82b0acc4b52f
  spec:
    containers:
    - args:
      - discovery
      - --monitoringAddr=:15014
      - --log_output_level=default:info
      - --domain
      - cluster.local
      - --keepaliveMaxServerConnectionAge
      - 30m
      image: docker.io/istio/pilot:1.20.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /live
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      name: discovery
      ports:
      - containerPort: 15010
        protocol: TCP
      - containerPort: 15012
        protocol: TCP
      - containerPort: 15014
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 10m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jssng
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker02
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-jssng
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-24T22:22:20Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-24T16:03:09Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-24T16:03:09Z"
      message: 'containers with unready status: [discovery]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-24T16:03:09Z"
      message: 'containers with unready status: [discovery]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-24T16:03:04Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6331febca4a7ca0d21f49bff8c311633cee09b23a7744f1d2a6812392171b9ff
      image: docker.io/istio/pilot:1.20.0
      imageID: docker.io/istio/pilot@sha256:da619cc0915a27988ba8357916d84b4a137253a9df967e6521b14dc7100bb246
      lastState:
        terminated:
          containerID: containerd://6331febca4a7ca0d21f49bff8c311633cee09b23a7744f1d2a6812392171b9ff
          exitCode: 2
          finishedAt: "2025-04-25T19:59:51Z"
          reason: Error
          startedAt: "2025-04-25T19:58:24Z"
      name: discovery
      ready: false
      restartCount: 144
      started: false
      state:
        waiting:
          message: back-off 5m0s restarting failed container=discovery pod=istiod-547884f6c-r6lzk_istio(f81d160c-efec-4634-ac60-82b0acc4b52f)
          reason: CrashLoopBackOff
    hostIP: 192.168.2.152
    hostIPs:
    - ip: 192.168.2.152
    phase: Running
    podIP: 10.36.0.17
    podIPs:
    - ip: 10.36.0.17
    qosClass: Burstable
    startTime: "2025-04-24T16:03:09Z"
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"istio-ingressgateway","istio":"ingressgateway"},"name":"istio-ingressgateway","namespace":"istio"},"spec":{"ports":[{"name":"http2","port":80,"targetPort":8080},{"name":"https","port":443,"targetPort":8443},{"name":"status-port","port":15021,"targetPort":15021}],"selector":{"app":"istio-ingressgateway"},"type":"LoadBalancer"}}
    creationTimestamp: "2025-04-24T16:07:36Z"
    labels:
      app: istio-ingressgateway
      istio: ingressgateway
    name: istio-ingressgateway
    namespace: istio
    resourceVersion: "709508"
    uid: 2e2d320c-aa1f-4698-9705-c533f4691f44
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.102.79.190
    clusterIPs:
    - 10.102.79.190
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http2
      nodePort: 30605
      port: 80
      protocol: TCP
      targetPort: 8080
    - name: https
      nodePort: 31169
      port: 443
      protocol: TCP
      targetPort: 8443
    - name: status-port
      nodePort: 31366
      port: 15021
      protocol: TCP
      targetPort: 15021
    selector:
      app: istio-ingressgateway
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"istio-ingressgateway","istio":"ingressgateway"},"name":"istio-ingressgateway-nodeport","namespace":"istio"},"spec":{"ports":[{"name":"http2","nodePort":30095,"port":80,"targetPort":8080},{"name":"https","nodePort":30096,"port":443,"targetPort":8443},{"name":"status-port","nodePort":30097,"port":15021,"targetPort":15021}],"selector":{"app":"istio-ingressgateway"},"type":"NodePort"}}
    creationTimestamp: "2025-04-24T16:07:39Z"
    labels:
      app: istio-ingressgateway
      istio: ingressgateway
    name: istio-ingressgateway-nodeport
    namespace: istio
    resourceVersion: "709517"
    uid: 5e7d4811-04c6-4a11-930b-be20d2162cc2
  spec:
    clusterIP: 10.107.183.173
    clusterIPs:
    - 10.107.183.173
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http2
      nodePort: 30095
      port: 80
      protocol: TCP
      targetPort: 8080
    - name: https
      nodePort: 30096
      port: 443
      protocol: TCP
      targetPort: 8443
    - name: status-port
      nodePort: 30097
      port: 15021
      protocol: TCP
      targetPort: 15021
    selector:
      app: istio-ingressgateway
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"istiod","istio":"pilot"},"name":"istiod","namespace":"istio"},"spec":{"ports":[{"name":"grpc-xds","port":15010,"targetPort":15010},{"name":"https-dns","port":15012,"targetPort":15012},{"name":"http-monitoring","port":15014,"targetPort":15014}],"selector":{"app":"istiod"}}}
    creationTimestamp: "2025-04-24T15:58:43Z"
    labels:
      app: istiod
      istio: pilot
    name: istiod
    namespace: istio
    resourceVersion: "708166"
    uid: 06ee29b7-9691-4981-91f8-90e2f2e3896a
  spec:
    clusterIP: 10.96.157.177
    clusterIPs:
    - 10.96.157.177
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: grpc-xds
      port: 15010
      protocol: TCP
      targetPort: 15010
    - name: https-dns
      port: 15012
      protocol: TCP
      targetPort: 15012
    - name: http-monitoring
      port: 15014
      protocol: TCP
      targetPort: 15014
    selector:
      app: istiod
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"istio-ingressgateway","istio":"ingressgateway"},"name":"istio-ingressgateway","namespace":"istio"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"istio-ingressgateway"}},"template":{"metadata":{"labels":{"app":"istio-ingressgateway","istio":"ingressgateway"}},"spec":{"containers":[{"env":[{"name":"ISTIO_META_ROUTER_MODE","value":"standard"},{"name":"ISTIO_META_REQUESTED_NETWORK_VIEW","value":"network1"}],"image":"istio/proxyv2:1.18.0","livenessProbe":{"httpGet":{"path":"/healthz/ready","port":15021},"initialDelaySeconds":5,"periodSeconds":30},"name":"istio-proxy","ports":[{"containerPort":8080},{"containerPort":8443},{"containerPort":15021},{"containerPort":15090}],"readinessProbe":{"httpGet":{"path":"/healthz/ready","port":15021},"initialDelaySeconds":5,"periodSeconds":30},"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}}}]}}}}
    creationTimestamp: "2025-04-24T16:07:36Z"
    generation: 2
    labels:
      app: istio-ingressgateway
      istio: ingressgateway
    name: istio-ingressgateway
    namespace: istio
    resourceVersion: "710889"
    uid: fe5fc76d-1c49-4de5-b62a-72084f5643b1
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: istio-ingressgateway
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: istio-ingressgateway
          istio: ingressgateway
      spec:
        containers:
        - env:
          - name: ISTIO_META_ROUTER_MODE
            value: standard
          - name: ISTIO_META_REQUESTED_NETWORK_VIEW
            value: network1
          image: istio/proxyv2:1.18.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz/ready
              port: 15021
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: istio-proxy
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          - containerPort: 15021
            protocol: TCP
          - containerPort: 15090
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz/ready
              port: 15021
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    conditions:
    - lastTransitionTime: "2025-04-24T16:07:38Z"
      lastUpdateTime: "2025-04-24T16:07:38Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    - lastTransitionTime: "2025-04-24T16:18:07Z"
      lastUpdateTime: "2025-04-24T16:18:07Z"
      message: ReplicaSet "istio-ingressgateway-64ffb475cd" has timed out progressing.
      reason: ProgressDeadlineExceeded
      status: "False"
      type: Progressing
    observedGeneration: 2
    replicas: 2
    unavailableReplicas: 2
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"istiod","istio":"pilot"},"name":"istiod","namespace":"istio"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"istiod"}},"template":{"metadata":{"labels":{"app":"istiod"}},"spec":{"containers":[{"args":["discovery","--monitoringAddr=:15014","--log_output_level=default:info","--domain","cluster.local","--keepaliveMaxServerConnectionAge","30m"],"image":"docker.io/istio/pilot:1.20.0","livenessProbe":{"httpGet":{"path":"/live","port":8080},"initialDelaySeconds":5,"periodSeconds":30},"name":"discovery","ports":[{"containerPort":15010},{"containerPort":15012},{"containerPort":15014}],"readinessProbe":{"httpGet":{"path":"/ready","port":8080},"initialDelaySeconds":5,"periodSeconds":30},"resources":{"limits":{"cpu":"1000m","memory":"1Gi"},"requests":{"cpu":"10m","memory":"100Mi"}}}]}}}}
    creationTimestamp: "2025-04-24T15:58:39Z"
    generation: 1
    labels:
      app: istiod
      istio: pilot
    name: istiod
    namespace: istio
    resourceVersion: "710284"
    uid: 8696ecb6-25b2-41b7-8d72-4d24e6640b7d
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: istiod
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: istiod
      spec:
        containers:
        - args:
          - discovery
          - --monitoringAddr=:15014
          - --log_output_level=default:info
          - --domain
          - cluster.local
          - --keepaliveMaxServerConnectionAge
          - 30m
          image: docker.io/istio/pilot:1.20.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /live
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: discovery
          ports:
          - containerPort: 15010
            protocol: TCP
          - containerPort: 15012
            protocol: TCP
          - containerPort: 15014
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 10m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    conditions:
    - lastTransitionTime: "2025-04-24T16:02:58Z"
      lastUpdateTime: "2025-04-24T16:02:58Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    - lastTransitionTime: "2025-04-24T16:13:01Z"
      lastUpdateTime: "2025-04-24T16:13:01Z"
      message: ReplicaSet "istiod-547884f6c" has timed out progressing.
      reason: ProgressDeadlineExceeded
      status: "False"
      type: Progressing
    observedGeneration: 1
    replicas: 1
    unavailableReplicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-04-24T16:08:06Z"
    generation: 1
    labels:
      app: istio-ingressgateway
      istio: ingressgateway
      pod-template-hash: 64ffb475cd
    name: istio-ingressgateway-64ffb475cd
    namespace: istio
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: istio-ingressgateway
      uid: fe5fc76d-1c49-4de5-b62a-72084f5643b1
    resourceVersion: "709659"
    uid: 0db6a633-41aa-4e24-90d3-c040133debc8
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: istio-ingressgateway
        pod-template-hash: 64ffb475cd
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: istio-ingressgateway
          istio: ingressgateway
          pod-template-hash: 64ffb475cd
      spec:
        containers:
        - env:
          - name: ISTIO_META_ROUTER_MODE
            value: standard
          - name: ISTIO_META_REQUESTED_NETWORK_VIEW
            value: network1
          image: istio/proxyv2:1.18.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz/ready
              port: 15021
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: istio-proxy
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          - containerPort: 15021
            protocol: TCP
          - containerPort: 15090
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz/ready
              port: 15021
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    fullyLabeledReplicas: 1
    observedGeneration: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-04-24T16:07:36Z"
    generation: 1
    labels:
      app: istio-ingressgateway
      istio: ingressgateway
      pod-template-hash: ccd975786
    name: istio-ingressgateway-ccd975786
    namespace: istio
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: istio-ingressgateway
      uid: fe5fc76d-1c49-4de5-b62a-72084f5643b1
    resourceVersion: "709501"
    uid: 1b6ef9fa-b67e-4f8e-8f88-7da994d1faa1
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: istio-ingressgateway
        pod-template-hash: ccd975786
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: istio-ingressgateway
          istio: ingressgateway
          pod-template-hash: ccd975786
      spec:
        containers:
        - env:
          - name: ISTIO_META_ROUTER_MODE
            value: standard
          - name: ISTIO_META_REQUESTED_NETWORK_VIEW
            value: network1
          image: gcr.io/istio-release/proxyv2:1.20.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz/ready
              port: 15021
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: istio-proxy
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          - containerPort: 15021
            protocol: TCP
          - containerPort: 15090
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz/ready
              port: 15021
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    fullyLabeledReplicas: 1
    observedGeneration: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-04-24T16:02:56Z"
    generation: 1
    labels:
      app: istiod
      pod-template-hash: 547884f6c
    name: istiod-547884f6c
    namespace: istio
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: istiod
      uid: 8696ecb6-25b2-41b7-8d72-4d24e6640b7d
    resourceVersion: "708532"
    uid: c45c16c9-c3e1-4df7-97cc-56107bcb39e2
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: istiod
        pod-template-hash: 547884f6c
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: istiod
          pod-template-hash: 547884f6c
      spec:
        containers:
        - args:
          - discovery
          - --monitoringAddr=:15014
          - --log_output_level=default:info
          - --domain
          - cluster.local
          - --keepaliveMaxServerConnectionAge
          - 30m
          image: docker.io/istio/pilot:1.20.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /live
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: discovery
          ports:
          - containerPort: 15010
            protocol: TCP
          - containerPort: 15012
            protocol: TCP
          - containerPort: 15014
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 10m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    fullyLabeledReplicas: 1
    observedGeneration: 1
    replicas: 1
kind: List
metadata:
  resourceVersion: ""
