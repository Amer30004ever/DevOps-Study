apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum.config.adlists: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
      checksum.config.blacklist: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
      checksum.config.dnsmasqConfig: f627cb75c4dc5a778669741ddee82a2dc7f05ed289ac919ebf425fc67b16633
      checksum.config.regex: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
      checksum.config.staticDhcpConfig: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
      checksum.config.whitelist: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
    creationTimestamp: "2025-04-23T22:19:35Z"
    generateName: my-pihole-5dfb646fb7-
    labels:
      app: pihole
      app.kubernetes.io/name: pihole
      pod-template-hash: 5dfb646fb7
      release: my-pihole
    name: my-pihole-5dfb646fb7-2jlfk
    namespace: pihole
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: my-pihole-5dfb646fb7
      uid: 2c70c64f-1bd9-4076-9905-3409f2b8ace9
    resourceVersion: "728593"
    uid: df20c392-c7a2-4c81-bf70-39fb2d60d5a6
  spec:
    containers:
    - env:
      - name: TZ
        value: UTC
      - name: WEBPASSWORD
        valueFrom:
          secretKeyRef:
            key: password
            name: pihole-secret
      - name: DNS1
        value: 1.1.1.1
      - name: DNS2
        value: 1.0.0.1
      - name: PIHOLE_DNS_1
        value: 1.1.1.1
      - name: PIHOLE_DNS_2
        value: 1.0.0.1
      - name: PIHOLE_DNS_3
        value: 8.8.8.8
      - name: PIHOLE_DNS_4
        value: 8.8.4.4
      - name: DNSMASQ_LISTENING
        value: all
      - name: QUERY_LOGGING
        value: "true"
      - name: BLOCKING_ENABLED
        value: "true"
      - name: WEBTHEME
        value: default
      - name: CACHE_SIZE
        value: "10000"
      - name: FTLCONF_webserver_port
        value: "80"
      - name: VIRTUAL_HOST
        value: pi.hole
      - name: FTLCONF_misc_etc_dnsmasq_d
        value: "true"
      - name: FTLCONF_webserver_api_password
        valueFrom:
          secretKeyRef:
            key: password
            name: pihole-secret
      - name: FTLCONF_dns_upstreams
        value: 8.8.8.8;8.8.4.4
      image: pihole/pihole:2024.02.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /admin/
          port: 80
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: pihole
      ports:
      - containerPort: 80
        name: web-http
        protocol: TCP
      - containerPort: 443
        name: web-https
        protocol: TCP
      - containerPort: 53
        name: dns-53
        protocol: TCP
      - containerPort: 53
        name: dns-udp
        protocol: UDP
      - containerPort: 67
        name: dhcp-67
        protocol: UDP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /admin/
          port: 80
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 200m
          memory: 512Mi
      securityContext:
        privileged: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/pihole
        name: pihole-data
      - mountPath: /etc/dnsmasq.d
        name: dnsmasq-d
      - mountPath: /etc/addn-hosts
        name: custom-dnsmasq
        subPath: addn-hosts
      - mountPath: /etc/dnsmasq.d/02-custom.conf
        name: custom-dnsmasq
        subPath: 02-custom.conf
      - mountPath: /etc/pihole/pihole-FTL.conf
        name: pihole-ftl-config
        subPath: pihole-FTL.conf
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qq9xw
        readOnly: true
    dnsConfig:
      nameservers:
      - 127.0.0.1
      - 8.8.8.8
    dnsPolicy: None
    enableServiceLinks: true
    nodeName: worker02
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: pihole-data
      persistentVolumeClaim:
        claimName: pihole-data
    - name: dnsmasq-d
      persistentVolumeClaim:
        claimName: dnsmasq-d
    - emptyDir: {}
      name: config
    - configMap:
        defaultMode: 420
        name: my-pihole-custom-dnsmasq
      name: custom-dnsmasq
    - configMap:
        defaultMode: 420
        name: pihole-ftl-config
      name: pihole-ftl-config
    - name: kube-api-access-qq9xw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-24T22:22:21Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-23T22:19:35Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-24T23:24:01Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-24T23:24:01Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-23T22:19:35Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e6c45b0e3c47ced0e53755efa75345ba5c5438b49c917ccce2fc248bd40c8be3
      image: docker.io/pihole/pihole:2024.02.1
      imageID: docker.io/pihole/pihole@sha256:1bd566e8d110820227e346e37c51187990f7267cc99b750cc76093a0e30d444e
      lastState:
        terminated:
          containerID: containerd://566422f3b85cb36ec22486dffb34a2779fe11926a73e3ec36450c2dcccc2b05a
          exitCode: 137
          finishedAt: "2025-04-24T23:23:10Z"
          reason: Error
          startedAt: "2025-04-24T22:25:07Z"
      name: pihole
      ready: true
      restartCount: 27
      started: true
      state:
        running:
          startedAt: "2025-04-24T23:23:46Z"
    hostIP: 192.168.2.152
    hostIPs:
    - ip: 192.168.2.152
    phase: Running
    podIP: 10.36.0.25
    podIPs:
    - ip: 10.36.0.25
    qosClass: Burstable
    startTime: "2025-04-23T22:19:35Z"
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"pihole"},"name":"my-pihole-dhcp","namespace":"pihole"},"spec":{"ports":[{"name":"dhcp","nodePort":31096,"port":67,"protocol":"UDP","targetPort":67}],"selector":{"app":"pihole"},"type":"NodePort"}}
      meta.helm.sh/release-name: my-pihole
      meta.helm.sh/release-namespace: pihole
    creationTimestamp: "2025-04-23T00:35:47Z"
    labels:
      app: pihole
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: pihole
      chart: pihole-2.29.1
      heritage: Helm
      release: my-pihole
    name: my-pihole-dhcp
    namespace: pihole
    resourceVersion: "636216"
    uid: d60a3176-3f7c-4e21-a0e3-5b52605e5458
  spec:
    clusterIP: 10.102.197.176
    clusterIPs:
    - 10.102.197.176
    externalTrafficPolicy: Local
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: dhcp
      nodePort: 31096
      port: 67
      protocol: UDP
      targetPort: 67
    selector:
      app: pihole
      release: my-pihole
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"pihole"},"name":"my-pihole-dns-tcp","namespace":"pihole"},"spec":{"ports":[{"name":"dns-tcp","nodePort":30203,"port":53,"protocol":"TCP","targetPort":53}],"selector":{"app":"pihole"},"type":"NodePort"}}
      meta.helm.sh/release-name: my-pihole
      meta.helm.sh/release-namespace: pihole
    creationTimestamp: "2025-04-23T00:35:47Z"
    labels:
      app: pihole
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: pihole
      chart: pihole-2.29.1
      heritage: Helm
      release: my-pihole
    name: my-pihole-dns-tcp
    namespace: pihole
    resourceVersion: "636213"
    uid: 18490eeb-030b-4514-9d3c-fd13e8ad8569
  spec:
    clusterIP: 10.103.5.38
    clusterIPs:
    - 10.103.5.38
    externalTrafficPolicy: Local
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: dns-tcp
      nodePort: 30203
      port: 53
      protocol: TCP
      targetPort: 53
    selector:
      app: pihole
      release: my-pihole
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"pihole"},"name":"my-pihole-dns-udp","namespace":"pihole"},"spec":{"ports":[{"name":"dns-udp","nodePort":31892,"port":53,"protocol":"UDP","targetPort":53}],"selector":{"app":"pihole"},"type":"NodePort"}}
      meta.helm.sh/release-name: my-pihole
      meta.helm.sh/release-namespace: pihole
    creationTimestamp: "2025-04-23T00:35:47Z"
    labels:
      app: pihole
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: pihole
      chart: pihole-2.29.1
      heritage: Helm
      release: my-pihole
    name: my-pihole-dns-udp
    namespace: pihole
    resourceVersion: "636215"
    uid: 575cac14-7a45-4bd6-8066-113b279c7424
  spec:
    clusterIP: 10.98.48.99
    clusterIPs:
    - 10.98.48.99
    externalTrafficPolicy: Local
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: dns-udp
      nodePort: 31892
      port: 53
      protocol: UDP
      targetPort: 53
    selector:
      app: pihole
      release: my-pihole
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"pihole"},"name":"my-pihole-web","namespace":"pihole"},"spec":{"ports":[{"name":"http","nodePort":30083,"port":80,"protocol":"TCP","targetPort":80},{"name":"https","nodePort":30084,"port":443,"protocol":"TCP","targetPort":443}],"selector":{"app":"pihole"},"type":"NodePort"}}
    creationTimestamp: "2025-04-23T22:23:14Z"
    labels:
      app: pihole
    name: my-pihole-web
    namespace: pihole
    resourceVersion: "653295"
    uid: 4dda7fe5-5b44-4626-ad4a-1a72b6064eb6
  spec:
    clusterIP: 10.108.154.237
    clusterIPs:
    - 10.108.154.237
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      nodePort: 30083
      port: 80
      protocol: TCP
      targetPort: 80
    - name: https
      nodePort: 30084
      port: 443
      protocol: TCP
      targetPort: 443
    selector:
      app: pihole
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "11"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"pihole"},"name":"my-pihole","namespace":"pihole"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"pihole"}},"template":{"metadata":{"labels":{"app":"pihole"}},"spec":{"containers":[{"env":[{"name":"TZ","value":"UTC"},{"name":"WEBPASSWORD","valueFrom":{"secretKeyRef":{"key":"password","name":"pihole-secret"}}},{"name":"DNS1","value":"1.1.1.1"},{"name":"DNS2","value":"1.0.0.1"},{"name":"PIHOLE_DNS_1","value":"1.1.1.1"},{"name":"PIHOLE_DNS_2","value":"1.0.0.1"},{"name":"PIHOLE_DNS_3","value":"8.8.8.8"},{"name":"PIHOLE_DNS_4","value":"8.8.4.4"},{"name":"DNSMASQ_LISTENING","value":"all"},{"name":"QUERY_LOGGING","value":"true"},{"name":"BLOCKING_ENABLED","value":"true"},{"name":"WEBTHEME","value":"default"},{"name":"CACHE_SIZE","value":"10000"},{"name":"FTLCONF_webserver_port","value":"80"},{"name":"VIRTUAL_HOST","value":"pi.hole"},{"name":"FTLCONF_misc_etc_dnsmasq_d","value":"true"},{"name":"FTLCONF_webserver_api_password","valueFrom":{"secretKeyRef":{"key":"password","name":"pihole-secret"}}},{"name":"FTLCONF_dns_upstreams","value":"8.8.8.8;8.8.4.4"}],"image":"pihole/pihole:2024.02.1","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/admin/","port":80},"initialDelaySeconds":30,"periodSeconds":10,"timeoutSeconds":5},"name":"pihole","ports":[{"containerPort":80,"name":"web-http","protocol":"TCP"},{"containerPort":443,"name":"web-https","protocol":"TCP"},{"containerPort":53,"name":"dns-53","protocol":"TCP"},{"containerPort":53,"name":"dns-53-udp","protocol":"UDP"},{"containerPort":67,"name":"dhcp-67","protocol":"UDP"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/admin/","port":80},"initialDelaySeconds":5,"periodSeconds":5,"timeoutSeconds":3},"resources":{"limits":{"cpu":"1000m","memory":"1Gi"},"requests":{"cpu":"200m","memory":"512Mi"}},"volumeMounts":[{"mountPath":"/etc/pihole","name":"pihole-data"},{"mountPath":"/etc/dnsmasq.d","name":"dnsmasq-d"},{"mountPath":"/etc/addn-hosts","name":"custom-dnsmasq","subPath":"addn-hosts"},{"mountPath":"/etc/dnsmasq.d/02-custom.conf","name":"custom-dnsmasq","subPath":"02-custom.conf"},{"mountPath":"/etc/pihole/pihole-FTL.conf","name":"pihole-ftl-config","subPath":"pihole-FTL.conf"}]}],"volumes":[{"name":"pihole-data","persistentVolumeClaim":{"claimName":"pihole-data"}},{"name":"dnsmasq-d","persistentVolumeClaim":{"claimName":"dnsmasq-d"}},{"configMap":{"name":"my-pihole-custom-dnsmasq"},"name":"custom-dnsmasq"},{"configMap":{"name":"pihole-ftl-config"},"name":"pihole-ftl-config"}]}}}}
      meta.helm.sh/release-name: my-pihole
      meta.helm.sh/release-namespace: pihole
    creationTimestamp: "2025-04-23T00:35:48Z"
    generation: 11
    labels:
      app: pihole
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: pihole
      chart: pihole-2.29.1
      heritage: Helm
      release: my-pihole
    name: my-pihole
    namespace: pihole
    resourceVersion: "723668"
    uid: ef184600-caad-4736-b79d-d8d76b2b66f9
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: pihole
        release: my-pihole
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum.config.adlists: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.blacklist: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.dnsmasqConfig: f627cb75c4dc5a778669741ddee82a2dc7f05ed289ac919ebf425fc67b16633
          checksum.config.regex: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.staticDhcpConfig: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.whitelist: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
        creationTimestamp: null
        labels:
          app: pihole
          app.kubernetes.io/name: pihole
          release: my-pihole
      spec:
        containers:
        - env:
          - name: TZ
            value: UTC
          - name: WEBPASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: pihole-secret
          - name: DNS1
            value: 1.1.1.1
          - name: DNS2
            value: 1.0.0.1
          - name: PIHOLE_DNS_1
            value: 1.1.1.1
          - name: PIHOLE_DNS_2
            value: 1.0.0.1
          - name: PIHOLE_DNS_3
            value: 8.8.8.8
          - name: PIHOLE_DNS_4
            value: 8.8.4.4
          - name: DNSMASQ_LISTENING
            value: all
          - name: QUERY_LOGGING
            value: "true"
          - name: BLOCKING_ENABLED
            value: "true"
          - name: WEBTHEME
            value: default
          - name: CACHE_SIZE
            value: "10000"
          - name: FTLCONF_webserver_port
            value: "80"
          - name: VIRTUAL_HOST
            value: pi.hole
          - name: FTLCONF_misc_etc_dnsmasq_d
            value: "true"
          - name: FTLCONF_webserver_api_password
            valueFrom:
              secretKeyRef:
                key: password
                name: pihole-secret
          - name: FTLCONF_dns_upstreams
            value: 8.8.8.8;8.8.4.4
          image: pihole/pihole:2024.02.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /admin/
              port: 80
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: pihole
          ports:
          - containerPort: 80
            name: web-http
            protocol: TCP
          - containerPort: 443
            name: web-https
            protocol: TCP
          - containerPort: 53
            name: dns-53
            protocol: TCP
          - containerPort: 53
            name: dns-udp
            protocol: UDP
          - containerPort: 67
            name: dhcp-67
            protocol: UDP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /admin/
              port: 80
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 512Mi
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/pihole
            name: pihole-data
          - mountPath: /etc/dnsmasq.d
            name: dnsmasq-d
          - mountPath: /etc/addn-hosts
            name: custom-dnsmasq
            subPath: addn-hosts
          - mountPath: /etc/dnsmasq.d/02-custom.conf
            name: custom-dnsmasq
            subPath: 02-custom.conf
          - mountPath: /etc/pihole/pihole-FTL.conf
            name: pihole-ftl-config
            subPath: pihole-FTL.conf
        dnsConfig:
          nameservers:
          - 127.0.0.1
          - 8.8.8.8
        dnsPolicy: None
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: pihole-data
          persistentVolumeClaim:
            claimName: pihole-data
        - name: dnsmasq-d
          persistentVolumeClaim:
            claimName: dnsmasq-d
        - emptyDir: {}
          name: config
        - configMap:
            defaultMode: 420
            name: my-pihole-custom-dnsmasq
          name: custom-dnsmasq
        - configMap:
            defaultMode: 420
            name: pihole-ftl-config
          name: pihole-ftl-config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-04-23T00:35:48Z"
      lastUpdateTime: "2025-04-23T00:35:48Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-04-23T19:21:07Z"
      lastUpdateTime: "2025-04-23T22:19:46Z"
      message: ReplicaSet "my-pihole-5dfb646fb7" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 11
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "11"
      meta.helm.sh/release-name: my-pihole
      meta.helm.sh/release-namespace: pihole
    creationTimestamp: "2025-04-23T22:19:35Z"
    generation: 1
    labels:
      app: pihole
      app.kubernetes.io/name: pihole
      pod-template-hash: 5dfb646fb7
      release: my-pihole
    name: my-pihole-5dfb646fb7
    namespace: pihole
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: my-pihole
      uid: ef184600-caad-4736-b79d-d8d76b2b66f9
    resourceVersion: "723659"
    uid: 2c70c64f-1bd9-4076-9905-3409f2b8ace9
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: pihole
        pod-template-hash: 5dfb646fb7
        release: my-pihole
    template:
      metadata:
        annotations:
          checksum.config.adlists: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.blacklist: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.dnsmasqConfig: f627cb75c4dc5a778669741ddee82a2dc7f05ed289ac919ebf425fc67b16633
          checksum.config.regex: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.staticDhcpConfig: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.whitelist: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
        creationTimestamp: null
        labels:
          app: pihole
          app.kubernetes.io/name: pihole
          pod-template-hash: 5dfb646fb7
          release: my-pihole
      spec:
        containers:
        - env:
          - name: TZ
            value: UTC
          - name: WEBPASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: pihole-secret
          - name: DNS1
            value: 1.1.1.1
          - name: DNS2
            value: 1.0.0.1
          - name: PIHOLE_DNS_1
            value: 1.1.1.1
          - name: PIHOLE_DNS_2
            value: 1.0.0.1
          - name: PIHOLE_DNS_3
            value: 8.8.8.8
          - name: PIHOLE_DNS_4
            value: 8.8.4.4
          - name: DNSMASQ_LISTENING
            value: all
          - name: QUERY_LOGGING
            value: "true"
          - name: BLOCKING_ENABLED
            value: "true"
          - name: WEBTHEME
            value: default
          - name: CACHE_SIZE
            value: "10000"
          - name: FTLCONF_webserver_port
            value: "80"
          - name: VIRTUAL_HOST
            value: pi.hole
          - name: FTLCONF_misc_etc_dnsmasq_d
            value: "true"
          - name: FTLCONF_webserver_api_password
            valueFrom:
              secretKeyRef:
                key: password
                name: pihole-secret
          - name: FTLCONF_dns_upstreams
            value: 8.8.8.8;8.8.4.4
          image: pihole/pihole:2024.02.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /admin/
              port: 80
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: pihole
          ports:
          - containerPort: 80
            name: web-http
            protocol: TCP
          - containerPort: 443
            name: web-https
            protocol: TCP
          - containerPort: 53
            name: dns-53
            protocol: TCP
          - containerPort: 53
            name: dns-udp
            protocol: UDP
          - containerPort: 67
            name: dhcp-67
            protocol: UDP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /admin/
              port: 80
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 512Mi
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/pihole
            name: pihole-data
          - mountPath: /etc/dnsmasq.d
            name: dnsmasq-d
          - mountPath: /etc/addn-hosts
            name: custom-dnsmasq
            subPath: addn-hosts
          - mountPath: /etc/dnsmasq.d/02-custom.conf
            name: custom-dnsmasq
            subPath: 02-custom.conf
          - mountPath: /etc/pihole/pihole-FTL.conf
            name: pihole-ftl-config
            subPath: pihole-FTL.conf
        dnsConfig:
          nameservers:
          - 127.0.0.1
          - 8.8.8.8
        dnsPolicy: None
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: pihole-data
          persistentVolumeClaim:
            claimName: pihole-data
        - name: dnsmasq-d
          persistentVolumeClaim:
            claimName: dnsmasq-d
        - emptyDir: {}
          name: config
        - configMap:
            defaultMode: 420
            name: my-pihole-custom-dnsmasq
          name: custom-dnsmasq
        - configMap:
            defaultMode: 420
            name: pihole-ftl-config
          name: pihole-ftl-config
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
      meta.helm.sh/release-name: my-pihole
      meta.helm.sh/release-namespace: pihole
    creationTimestamp: "2025-04-23T19:08:51Z"
    generation: 2
    labels:
      app: pihole
      app.kubernetes.io/name: pihole
      pod-template-hash: 5f564c8dbb
      release: my-pihole
    name: my-pihole-5f564c8dbb
    namespace: pihole
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: my-pihole
      uid: ef184600-caad-4736-b79d-d8d76b2b66f9
    resourceVersion: "637421"
    uid: a9ed09a8-98e4-4e95-8f19-7d12282ea4a4
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: pihole
        pod-template-hash: 5f564c8dbb
        release: my-pihole
    template:
      metadata:
        annotations:
          checksum.config.adlists: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.blacklist: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.dnsmasqConfig: f627cb75c4dc5a778669741ddee82a2dc7f05ed289ac919ebf425fc67b16633
          checksum.config.regex: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.staticDhcpConfig: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.whitelist: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
        creationTimestamp: null
        labels:
          app: pihole
          app.kubernetes.io/name: pihole
          pod-template-hash: 5f564c8dbb
          release: my-pihole
      spec:
        containers:
        - env:
          - name: TZ
            value: UTC
          - name: WEBPASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: pihole-secret
          - name: DNS1
            value: 1.1.1.1
          - name: DNS2
            value: 1.0.0.1
          - name: FTLCONF_webserver_port
            value: "80"
          - name: VIRTUAL_HOST
            value: pi.hole
          - name: FTLCONF_misc_etc_dnsmasq_d
            value: "true"
          - name: FTLCONF_webserver_api_password
            valueFrom:
              secretKeyRef:
                key: password
                name: my-pihole-password
          - name: FTLCONF_dns_upstreams
            value: 8.8.8.8;8.8.4.4
          image: pihole/pihole:2024.02.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /admin/
              port: 80
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: pihole
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-udp
            protocol: UDP
          - containerPort: 443
            name: https
            protocol: TCP
          - containerPort: 67
            name: client-udp
            protocol: UDP
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /admin/
              port: 80
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 256Mi
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/pihole
            name: pihole-data
          - mountPath: /etc/dnsmasq.d
            name: dnsmasq-d
          - mountPath: /etc/dnsmasq.d/02-custom.conf
            name: custom-dnsmasq
            subPath: 02-custom.conf
          - mountPath: /etc/addn-hosts
            name: custom-dnsmasq
            subPath: addn-hosts
        dnsConfig:
          nameservers:
          - 127.0.0.1
          - 8.8.8.8
        dnsPolicy: None
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: pihole-data
          persistentVolumeClaim:
            claimName: pihole-data
        - name: dnsmasq-d
          persistentVolumeClaim:
            claimName: dnsmasq-d
        - emptyDir: {}
          name: config
        - configMap:
            defaultMode: 420
            name: my-pihole-custom-dnsmasq
          name: custom-dnsmasq
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "8"
      meta.helm.sh/release-name: my-pihole
      meta.helm.sh/release-namespace: pihole
    creationTimestamp: "2025-04-23T20:55:10Z"
    generation: 2
    labels:
      app: pihole
      app.kubernetes.io/name: pihole
      pod-template-hash: 6bc8dfb54b
      release: my-pihole
    name: my-pihole-6bc8dfb54b
    namespace: pihole
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: my-pihole
      uid: ef184600-caad-4736-b79d-d8d76b2b66f9
    resourceVersion: "644786"
    uid: 5c703728-4542-4884-b13a-276233993668
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: pihole
        pod-template-hash: 6bc8dfb54b
        release: my-pihole
    template:
      metadata:
        annotations:
          checksum.config.adlists: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.blacklist: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.dnsmasqConfig: f627cb75c4dc5a778669741ddee82a2dc7f05ed289ac919ebf425fc67b16633
          checksum.config.regex: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.staticDhcpConfig: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.whitelist: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
        creationTimestamp: null
        labels:
          app: pihole
          app.kubernetes.io/name: pihole
          pod-template-hash: 6bc8dfb54b
          release: my-pihole
      spec:
        containers:
        - env:
          - name: TZ
            value: UTC
          - name: WEBPASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: pihole-secret
          - name: DNS1
            value: 1.1.1.1
          - name: DNS2
            value: 1.0.0.1
          - name: PIHOLE_DNS_1
            value: 1.1.1.1
          - name: PIHOLE_DNS_2
            value: 1.0.0.1
          - name: PIHOLE_DNS_3
            value: 8.8.8.8
          - name: PIHOLE_DNS_4
            value: 8.8.4.4
          - name: DNSMASQ_LISTENING
            value: all
          - name: QUERY_LOGGING
            value: "true"
          - name: BLOCKING_ENABLED
            value: "true"
          - name: WEBTHEME
            value: default
          - name: CACHE_SIZE
            value: "10000"
          - name: FTLCONF_webserver_port
            value: "80"
          - name: VIRTUAL_HOST
            value: pi.hole
          - name: FTLCONF_misc_etc_dnsmasq_d
            value: "true"
          - name: FTLCONF_webserver_api_password
            valueFrom:
              secretKeyRef:
                key: password
                name: pihole-secret
          - name: FTLCONF_dns_upstreams
            value: 8.8.8.8;8.8.4.4
          image: pihole/pihole:2024.02.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /admin/
              port: 80
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: pihole
          ports:
          - containerPort: 80
            name: web-http
            protocol: TCP
          - containerPort: 443
            name: web-https
            protocol: TCP
          - containerPort: 53
            name: dns-tcp-53
            protocol: UDP
          - containerPort: 53
            name: dns-udp
            protocol: UDP
          - containerPort: 67
            name: dhcp-67
            protocol: UDP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /admin/
              port: 80
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 512Mi
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/pihole
            name: pihole-data
          - mountPath: /etc/dnsmasq.d
            name: dnsmasq-d
          - mountPath: /etc/addn-hosts
            name: custom-dnsmasq
            subPath: addn-hosts
          - mountPath: /etc/dnsmasq.d/02-custom.conf
            name: custom-dnsmasq
            subPath: 02-custom.conf
        dnsConfig:
          nameservers:
          - 127.0.0.1
          - 8.8.8.8
        dnsPolicy: None
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: pihole-data
          persistentVolumeClaim:
            claimName: pihole-data
        - name: dnsmasq-d
          persistentVolumeClaim:
            claimName: dnsmasq-d
        - emptyDir: {}
          name: config
        - configMap:
            defaultMode: 420
            name: my-pihole-custom-dnsmasq
          name: custom-dnsmasq
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
      meta.helm.sh/release-name: my-pihole
      meta.helm.sh/release-namespace: pihole
    creationTimestamp: "2025-04-23T19:21:07Z"
    generation: 2
    labels:
      app: pihole
      app.kubernetes.io/name: pihole
      pod-template-hash: 6f68d9565
      release: my-pihole
    name: my-pihole-6f68d9565
    namespace: pihole
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: my-pihole
      uid: ef184600-caad-4736-b79d-d8d76b2b66f9
    resourceVersion: "637999"
    uid: 89438e83-6e2a-47d2-af19-20a8aecddda4
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: pihole
        pod-template-hash: 6f68d9565
        release: my-pihole
    template:
      metadata:
        annotations:
          checksum.config.adlists: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.blacklist: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.dnsmasqConfig: f627cb75c4dc5a778669741ddee82a2dc7f05ed289ac919ebf425fc67b16633
          checksum.config.regex: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.staticDhcpConfig: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.whitelist: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
        creationTimestamp: null
        labels:
          app: pihole
          app.kubernetes.io/name: pihole
          pod-template-hash: 6f68d9565
          release: my-pihole
      spec:
        containers:
        - env:
          - name: TZ
            value: UTC
          - name: WEBPASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: pihole-secret
          - name: DNS1
            value: 1.1.1.1
          - name: DNS2
            value: 1.0.0.1
          - name: PIHOLE_DNS_1
            value: 1.1.1.1
          - name: PIHOLE_DNS_2
            value: 1.0.0.1
          - name: PIHOLE_DNS_3
            value: 8.8.8.8
          - name: PIHOLE_DNS_4
            value: 8.8.4.4
          - name: DNSMASQ_LISTENING
            value: all
          - name: QUERY_LOGGING
            value: "true"
          - name: BLOCKING_ENABLED
            value: "true"
          - name: WEBTHEME
            value: default
          - name: CACHE_SIZE
            value: "10000"
          - name: FTLCONF_webserver_port
            value: "80"
          - name: VIRTUAL_HOST
            value: pi.hole
          - name: FTLCONF_misc_etc_dnsmasq_d
            value: "true"
          - name: FTLCONF_webserver_api_password
            valueFrom:
              secretKeyRef:
                key: password
                name: my-pihole-password
          - name: FTLCONF_dns_upstreams
            value: 8.8.8.8;8.8.4.4
          image: pihole/pihole:2024.02.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /admin/
              port: 80
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: pihole
          ports:
          - containerPort: 80
            name: web-http
            protocol: TCP
          - containerPort: 53
            name: dns-udp-53
            protocol: TCP
          - containerPort: 53
            name: dns-udp
            protocol: UDP
          - containerPort: 443
            name: https
            protocol: TCP
          - containerPort: 67
            name: dhcp-67
            protocol: UDP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /admin/
              port: 80
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 512Mi
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/pihole
            name: pihole-data
          - mountPath: /etc/dnsmasq.d
            name: dnsmasq-d
          - mountPath: /etc/dnsmasq.d/02-custom.conf
            name: custom-dnsmasq
            subPath: 02-custom.conf
          - mountPath: /etc/addn-hosts
            name: custom-dnsmasq
            subPath: addn-hosts
        dnsConfig:
          nameservers:
          - 127.0.0.1
          - 8.8.8.8
        dnsPolicy: None
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: pihole-data
          persistentVolumeClaim:
            claimName: pihole-data
        - name: dnsmasq-d
          persistentVolumeClaim:
            claimName: dnsmasq-d
        - emptyDir: {}
          name: config
        - configMap:
            defaultMode: 420
            name: my-pihole-custom-dnsmasq
          name: custom-dnsmasq
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: my-pihole
      meta.helm.sh/release-namespace: pihole
    creationTimestamp: "2025-04-23T00:35:48Z"
    generation: 2
    labels:
      app: pihole
      app.kubernetes.io/name: pihole
      pod-template-hash: 6f9866cdfb
      release: my-pihole
    name: my-pihole-6f9866cdfb
    namespace: pihole
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: my-pihole
      uid: ef184600-caad-4736-b79d-d8d76b2b66f9
    resourceVersion: "636206"
    uid: e28ecca0-1576-474f-bf64-161715dd4cfa
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: pihole
        pod-template-hash: 6f9866cdfb
        release: my-pihole
    template:
      metadata:
        annotations:
          checksum.config.adlists: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.blacklist: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.dnsmasqConfig: f627cb75c4dc5a778669741ddee82a2dc7f05ed289ac919ebf425fc67b16633
          checksum.config.regex: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.staticDhcpConfig: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.whitelist: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
        creationTimestamp: null
        labels:
          app: pihole
          app.kubernetes.io/name: pihole
          pod-template-hash: 6f9866cdfb
          release: my-pihole
      spec:
        containers:
        - env:
          - name: FTLCONF_webserver_port
            value: "80"
          - name: VIRTUAL_HOST
            value: pi.hole
          - name: FTLCONF_misc_etc_dnsmasq_d
            value: "true"
          - name: FTLCONF_webserver_api_password
            valueFrom:
              secretKeyRef:
                key: password
                name: my-pihole-password
          - name: FTLCONF_dns_upstreams
            value: 8.8.8.8;8.8.4.4
          image: pihole/pihole:2025.03.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /admin
              port: http
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: pihole
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          - containerPort: 53
            name: dns
            protocol: TCP
          - containerPort: 53
            name: dns-udp
            protocol: UDP
          - containerPort: 443
            name: https
            protocol: TCP
          - containerPort: 67
            name: client-udp
            protocol: UDP
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /admin
              port: http
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/pihole
            name: config
          - mountPath: /etc/dnsmasq.d/02-custom.conf
            name: custom-dnsmasq
            subPath: 02-custom.conf
          - mountPath: /etc/addn-hosts
            name: custom-dnsmasq
            subPath: addn-hosts
        dnsConfig:
          nameservers:
          - 127.0.0.1
          - 8.8.8.8
        dnsPolicy: None
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: config
        - configMap:
            defaultMode: 420
            name: my-pihole-custom-dnsmasq
          name: custom-dnsmasq
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "9"
      meta.helm.sh/release-name: my-pihole
      meta.helm.sh/release-namespace: pihole
    creationTimestamp: "2025-04-23T20:56:22Z"
    generation: 2
    labels:
      app: pihole
      app.kubernetes.io/name: pihole
      pod-template-hash: 785cfdd84
      release: my-pihole
    name: my-pihole-785cfdd84
    namespace: pihole
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: my-pihole
      uid: ef184600-caad-4736-b79d-d8d76b2b66f9
    resourceVersion: "645215"
    uid: 639f33ba-99ad-49d1-bdbe-e6e31692a41a
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: pihole
        pod-template-hash: 785cfdd84
        release: my-pihole
    template:
      metadata:
        annotations:
          checksum.config.adlists: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.blacklist: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.dnsmasqConfig: f627cb75c4dc5a778669741ddee82a2dc7f05ed289ac919ebf425fc67b16633
          checksum.config.regex: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.staticDhcpConfig: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.whitelist: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
        creationTimestamp: null
        labels:
          app: pihole
          app.kubernetes.io/name: pihole
          pod-template-hash: 785cfdd84
          release: my-pihole
      spec:
        containers:
        - env:
          - name: TZ
            value: UTC
          - name: WEBPASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: pihole-secret
          - name: DNS1
            value: 1.1.1.1
          - name: DNS2
            value: 1.0.0.1
          - name: PIHOLE_DNS_1
            value: 1.1.1.1
          - name: PIHOLE_DNS_2
            value: 1.0.0.1
          - name: PIHOLE_DNS_3
            value: 8.8.8.8
          - name: PIHOLE_DNS_4
            value: 8.8.4.4
          - name: DNSMASQ_LISTENING
            value: all
          - name: QUERY_LOGGING
            value: "true"
          - name: BLOCKING_ENABLED
            value: "true"
          - name: WEBTHEME
            value: default
          - name: CACHE_SIZE
            value: "10000"
          - name: FTLCONF_webserver_port
            value: "80"
          - name: VIRTUAL_HOST
            value: pi.hole
          - name: FTLCONF_misc_etc_dnsmasq_d
            value: "true"
          - name: FTLCONF_webserver_api_password
            valueFrom:
              secretKeyRef:
                key: password
                name: pihole-secret
          - name: FTLCONF_dns_upstreams
            value: 8.8.8.8;8.8.4.4
          image: pihole/pihole:2024.02.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /admin/
              port: 80
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: pihole
          ports:
          - containerPort: 80
            name: web-http
            protocol: TCP
          - containerPort: 443
            name: web-https
            protocol: TCP
          - containerPort: 53
            name: dns-53
            protocol: TCP
          - containerPort: 53
            name: dns-udp
            protocol: UDP
          - containerPort: 67
            name: dhcp-67
            protocol: UDP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /admin/
              port: 80
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 512Mi
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/pihole
            name: pihole-data
          - mountPath: /etc/dnsmasq.d
            name: dnsmasq-d
          - mountPath: /etc/addn-hosts
            name: custom-dnsmasq
            subPath: addn-hosts
          - mountPath: /etc/dnsmasq.d/02-custom.conf
            name: custom-dnsmasq
            subPath: 02-custom.conf
        dnsConfig:
          nameservers:
          - 127.0.0.1
          - 8.8.8.8
        dnsPolicy: None
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: pihole-data
          persistentVolumeClaim:
            claimName: pihole-data
        - name: dnsmasq-d
          persistentVolumeClaim:
            claimName: dnsmasq-d
        - emptyDir: {}
          name: config
        - configMap:
            defaultMode: 420
            name: my-pihole-custom-dnsmasq
          name: custom-dnsmasq
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "7"
      deployment.kubernetes.io/revision-history: "5"
      meta.helm.sh/release-name: my-pihole
      meta.helm.sh/release-namespace: pihole
    creationTimestamp: "2025-04-23T19:28:52Z"
    generation: 4
    labels:
      app: pihole
      app.kubernetes.io/name: pihole
      pod-template-hash: 7868f7c48c
      release: my-pihole
    name: my-pihole-7868f7c48c
    namespace: pihole
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: my-pihole
      uid: ef184600-caad-4736-b79d-d8d76b2b66f9
    resourceVersion: "644588"
    uid: 6eebb40f-9735-400e-bb7b-9df4409399f3
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: pihole
        pod-template-hash: 7868f7c48c
        release: my-pihole
    template:
      metadata:
        annotations:
          checksum.config.adlists: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.blacklist: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.dnsmasqConfig: f627cb75c4dc5a778669741ddee82a2dc7f05ed289ac919ebf425fc67b16633
          checksum.config.regex: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.staticDhcpConfig: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.whitelist: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
        creationTimestamp: null
        labels:
          app: pihole
          app.kubernetes.io/name: pihole
          pod-template-hash: 7868f7c48c
          release: my-pihole
      spec:
        containers:
        - env:
          - name: TZ
            value: UTC
          - name: WEBPASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: pihole-secret
          - name: DNS1
            value: 1.1.1.1
          - name: DNS2
            value: 1.0.0.1
          - name: PIHOLE_DNS_1
            value: 1.1.1.1
          - name: PIHOLE_DNS_2
            value: 1.0.0.1
          - name: PIHOLE_DNS_3
            value: 8.8.8.8
          - name: PIHOLE_DNS_4
            value: 8.8.4.4
          - name: DNSMASQ_LISTENING
            value: all
          - name: QUERY_LOGGING
            value: "true"
          - name: BLOCKING_ENABLED
            value: "true"
          - name: WEBTHEME
            value: default
          - name: CACHE_SIZE
            value: "10000"
          - name: FTLCONF_webserver_port
            value: "80"
          - name: VIRTUAL_HOST
            value: pi.hole
          - name: FTLCONF_misc_etc_dnsmasq_d
            value: "true"
          - name: FTLCONF_webserver_api_password
            valueFrom:
              secretKeyRef:
                key: password
                name: pihole-secret
          - name: FTLCONF_dns_upstreams
            value: 8.8.8.8;8.8.4.4
          image: pihole/pihole:2024.02.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /admin/
              port: 80
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: pihole
          ports:
          - containerPort: 80
            name: web-http
            protocol: TCP
          - containerPort: 53
            name: dns-udp-53
            protocol: TCP
          - containerPort: 53
            name: dns-udp
            protocol: UDP
          - containerPort: 443
            name: https
            protocol: TCP
          - containerPort: 67
            name: dhcp-67
            protocol: UDP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /admin/
              port: 80
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 512Mi
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/pihole
            name: pihole-data
          - mountPath: /etc/dnsmasq.d
            name: dnsmasq-d
          - mountPath: /etc/addn-hosts
            name: custom-dnsmasq
            subPath: addn-hosts
          - mountPath: /etc/dnsmasq.d/02-custom.conf
            name: custom-dnsmasq
            subPath: 02-custom.conf
        dnsConfig:
          nameservers:
          - 127.0.0.1
          - 8.8.8.8
        dnsPolicy: None
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: pihole-data
          persistentVolumeClaim:
            claimName: pihole-data
        - name: dnsmasq-d
          persistentVolumeClaim:
            claimName: dnsmasq-d
        - emptyDir: {}
          name: config
        - configMap:
            defaultMode: 420
            name: my-pihole-custom-dnsmasq
          name: custom-dnsmasq
  status:
    observedGeneration: 4
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "6"
      deployment.kubernetes.io/revision-history: "4"
      meta.helm.sh/release-name: my-pihole
      meta.helm.sh/release-namespace: pihole
    creationTimestamp: "2025-04-23T19:25:51Z"
    generation: 4
    labels:
      app: pihole
      app.kubernetes.io/name: pihole
      pod-template-hash: b464967cf
      release: my-pihole
    name: my-pihole-b464967cf
    namespace: pihole
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: my-pihole
      uid: ef184600-caad-4736-b79d-d8d76b2b66f9
    resourceVersion: "644275"
    uid: f2f1ef66-1d75-45c0-819d-05afee40ac68
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: pihole
        pod-template-hash: b464967cf
        release: my-pihole
    template:
      metadata:
        annotations:
          checksum.config.adlists: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.blacklist: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.dnsmasqConfig: f627cb75c4dc5a778669741ddee82a2dc7f05ed289ac919ebf425fc67b16633
          checksum.config.regex: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.staticDhcpConfig: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.whitelist: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
        creationTimestamp: null
        labels:
          app: pihole
          app.kubernetes.io/name: pihole
          pod-template-hash: b464967cf
          release: my-pihole
      spec:
        containers:
        - env:
          - name: TZ
            value: UTC
          - name: WEBPASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: pihole-secret
          - name: DNS1
            value: 1.1.1.1
          - name: DNS2
            value: 1.0.0.1
          - name: PIHOLE_DNS_1
            value: 1.1.1.1
          - name: PIHOLE_DNS_2
            value: 1.0.0.1
          - name: PIHOLE_DNS_3
            value: 8.8.8.8
          - name: PIHOLE_DNS_4
            value: 8.8.4.4
          - name: DNSMASQ_LISTENING
            value: all
          - name: QUERY_LOGGING
            value: "true"
          - name: BLOCKING_ENABLED
            value: "true"
          - name: WEBTHEME
            value: default
          - name: CACHE_SIZE
            value: "10000"
          - name: FTLCONF_webserver_port
            value: "80"
          - name: VIRTUAL_HOST
            value: pi.hole
          - name: FTLCONF_misc_etc_dnsmasq_d
            value: "true"
          - name: FTLCONF_webserver_api_password
            valueFrom:
              secretKeyRef:
                key: password
                name: pihole-secret
          - name: FTLCONF_dns_upstreams
            value: 8.8.8.8;8.8.4.4
          image: pihole/pihole:2024.02.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /admin/
              port: 80
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: pihole
          ports:
          - containerPort: 80
            name: web-http
            protocol: TCP
          - containerPort: 53
            name: dns-tcp-53
            protocol: UDP
          - containerPort: 53
            name: dns-udp
            protocol: UDP
          - containerPort: 443
            name: https
            protocol: TCP
          - containerPort: 67
            name: dhcp-67
            protocol: UDP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /admin/
              port: 80
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 512Mi
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/pihole
            name: pihole-data
          - mountPath: /etc/dnsmasq.d
            name: dnsmasq-d
          - mountPath: /etc/addn-hosts
            name: custom-dnsmasq
            subPath: addn-hosts
          - mountPath: /etc/dnsmasq.d/02-custom.conf
            name: custom-dnsmasq
            subPath: 02-custom.conf
        dnsConfig:
          nameservers:
          - 127.0.0.1
          - 8.8.8.8
        dnsPolicy: None
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: pihole-data
          persistentVolumeClaim:
            claimName: pihole-data
        - name: dnsmasq-d
          persistentVolumeClaim:
            claimName: dnsmasq-d
        - emptyDir: {}
          name: config
        - configMap:
            defaultMode: 420
            name: my-pihole-custom-dnsmasq
          name: custom-dnsmasq
  status:
    observedGeneration: 4
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "10"
      meta.helm.sh/release-name: my-pihole
      meta.helm.sh/release-namespace: pihole
    creationTimestamp: "2025-04-23T21:00:03Z"
    generation: 2
    labels:
      app: pihole
      app.kubernetes.io/name: pihole
      pod-template-hash: fdd555754
      release: my-pihole
    name: my-pihole-fdd555754
    namespace: pihole
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: my-pihole
      uid: ef184600-caad-4736-b79d-d8d76b2b66f9
    resourceVersion: "652892"
    uid: 68ab8a98-a882-4c67-9fa3-4f2df1cb6aa9
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: pihole
        pod-template-hash: fdd555754
        release: my-pihole
    template:
      metadata:
        annotations:
          checksum.config.adlists: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.blacklist: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.dnsmasqConfig: f627cb75c4dc5a778669741ddee82a2dc7f05ed289ac919ebf425fc67b16633
          checksum.config.regex: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.staticDhcpConfig: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
          checksum.config.whitelist: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
        creationTimestamp: null
        labels:
          app: pihole
          app.kubernetes.io/name: pihole
          pod-template-hash: fdd555754
          release: my-pihole
      spec:
        containers:
        - env:
          - name: TZ
            value: UTC
          - name: WEBPASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: pihole-secret
          - name: DNS1
            value: 1.1.1.1
          - name: DNS2
            value: 1.0.0.1
          - name: PIHOLE_DNS_1
            value: 1.1.1.1
          - name: PIHOLE_DNS_2
            value: 1.0.0.1
          - name: PIHOLE_DNS_3
            value: 8.8.8.8
          - name: PIHOLE_DNS_4
            value: 8.8.4.4
          - name: DNSMASQ_LISTENING
            value: all
          - name: QUERY_LOGGING
            value: "true"
          - name: BLOCKING_ENABLED
            value: "true"
          - name: WEBTHEME
            value: default
          - name: CACHE_SIZE
            value: "10000"
          - name: FTLCONF_webserver_port
            value: "80"
          - name: VIRTUAL_HOST
            value: pi.hole
          - name: FTLCONF_misc_etc_dnsmasq_d
            value: "true"
          - name: FTLCONF_webserver_api_password
            valueFrom:
              secretKeyRef:
                key: password
                name: pihole-secret
          - name: FTLCONF_dns_upstreams
            value: 8.8.8.8;8.8.4.4
          image: pihole/pihole:2024.02.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /admin/
              port: 80
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: pihole
          ports:
          - containerPort: 80
            name: web-http
            protocol: TCP
          - containerPort: 443
            name: web-https
            protocol: TCP
          - containerPort: 53
            name: dns-53-udp
            protocol: TCP
          - containerPort: 53
            name: dns-udp
            protocol: UDP
          - containerPort: 67
            name: dhcp-67
            protocol: UDP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /admin/
              port: 80
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 512Mi
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/pihole
            name: pihole-data
          - mountPath: /etc/dnsmasq.d
            name: dnsmasq-d
          - mountPath: /etc/addn-hosts
            name: custom-dnsmasq
            subPath: addn-hosts
          - mountPath: /etc/dnsmasq.d/02-custom.conf
            name: custom-dnsmasq
            subPath: 02-custom.conf
        dnsConfig:
          nameservers:
          - 127.0.0.1
          - 8.8.8.8
        dnsPolicy: None
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: pihole-data
          persistentVolumeClaim:
            claimName: pihole-data
        - name: dnsmasq-d
          persistentVolumeClaim:
            claimName: dnsmasq-d
        - emptyDir: {}
          name: config
        - configMap:
            defaultMode: 420
            name: my-pihole-custom-dnsmasq
          name: custom-dnsmasq
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: autoscaling/v2
  kind: HorizontalPodAutoscaler
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"autoscaling/v2","kind":"HorizontalPodAutoscaler","metadata":{"annotations":{},"name":"pihole-hpa","namespace":"pihole"},"spec":{"maxReplicas":2,"metrics":[{"resource":{"name":"cpu","target":{"averageUtilization":80,"type":"Utilization"}},"type":"Resource"},{"resource":{"name":"memory","target":{"averageUtilization":80,"type":"Utilization"}},"type":"Resource"}],"minReplicas":1,"scaleTargetRef":{"apiVersion":"apps/v1","kind":"Deployment","name":"pihole"}}}
    creationTimestamp: "2025-04-23T18:55:55Z"
    name: pihole-hpa
    namespace: pihole
    resourceVersion: "659891"
    uid: 189b2c9b-a5d3-44fc-ae37-12d1b7f00d6a
  spec:
    maxReplicas: 2
    metrics:
    - resource:
        name: cpu
        target:
          averageUtilization: 80
          type: Utilization
      type: Resource
    - resource:
        name: memory
        target:
          averageUtilization: 80
          type: Utilization
      type: Resource
    minReplicas: 1
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: pihole
  status:
    conditions:
    - lastTransitionTime: "2025-04-23T18:56:10Z"
      message: 'the HPA controller was unable to get the target''s current scale:
        deployments/scale.apps "pihole" not found'
      reason: FailedGetScale
      status: "False"
      type: AbleToScale
    currentMetrics: null
    desiredReplicas: 0
kind: List
metadata:
  resourceVersion: ""
