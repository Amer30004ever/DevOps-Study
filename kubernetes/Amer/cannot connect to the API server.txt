The Error: connection refused
This specific error suggests that kubectl cannot connect to the API server at 192.168.222.161:6443. Common reasons include:

The API server is down:

The Kubernetes control plane might not be running or reachable.
Network issues:

There might be a network problem preventing access to this IP from your local machine.
Incorrect IP in kubeconfig:

The IP may be incorrect or outdated, especially if the control plane node's IP has changed.
Firewall or Security Rules:

The firewall or security group settings might block communication on port 6443.
How to troubleshoot:
Check kubeconfig: Open your kubeconfig file (~/.kube/config) and check if 192.168.222.161 is the server address under the clusters section.

cat ~/.kube/config
Example entry:

clusters:
- cluster:
    server: https://192.168.222.161:6443
Verify API server status: If you have access to the control plane, log in and verify that the Kubernetes API server is running:

sudo systemctl status kube-apiserver
Ping the IP: Test connectivity to the control plane node:

ping 192.168.222.161
Update the kubeconfig: If the IP has changed, update the kubeconfig file with the correct API server address.

Example:

		     kubectl config set-cluster <CLUSTER_NAME> --server=https://<new_ip>:6443
master@master-k8s:~$ kubectl config set-cluster Amer-Cluster --server=https://192.168.2.130:6443

Check Cluster Nodes: If possible, use SSH or console access to verify the status of the node with the IP 192.168.222.161.

Re-initialize (if necessary): If the issue persists, and you're using kubeadm, you might need to reinitialize the cluster or reconfigure the kubeconfig:

kubeadm init --apiserver-advertise-address=<correct-ip>


how i get cluster name ?

You can find the cluster name configured in your kubeconfig file, which is typically located at ~/.kube/config. Here's how to retrieve it:

Method 1: Using kubectl config view
Run the following command to display your kubeconfig configuration:

kubectl config view
Look for the clusters section in the output. It will look something like this:

clusters:
- cluster:
    server: https://192.168.222.161:6443
  name: my-cluster-name
The name field under clusters is your cluster name. In this example, it is my-cluster-name.

Method 2: Using kubectl config current-context
The current context includes the cluster name. To display the current context:

kubectl config current-context
If the context name follows the format <user>@<cluster-name>, the part after @ is the cluster name.

Method 3: Parse Directly from kubeconfig File
Open your kubeconfig file and inspect the clusters section. Use this command:

cat ~/.kube/config
Look for the clusters section:

clusters:
- cluster:
    server: https://192.168.222.161:6443
  name: my-cluster-name

Here, the cluster name is my-cluster-name.