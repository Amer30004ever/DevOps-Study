Here's a **detailed step-by-step execution guide** for adding a Windows host to AWX and running jobs, with troubleshooting:

---

### **Step 1: Add Windows Host to AWX Inventory**
#### **1.1 Log in to AWX Web UI**
- Access `http://<AWX_SERVER_IP>:8081`  
- Login with `admin` and your password  

#### **1.2 Create Inventory**
1. Navigate to:  
   **Resources â†’ Inventories â†’ Add â†’ Inventory**  
2. Fill in:  
   - **Name**: `Windows Servers`  
   - **Organization**: `Default`  
3. Click **Save**  

#### **1.3 Add Windows Host**
1. In the inventory, click **Hosts â†’ Add**  
2. Configure:  
   - **Host Name**: `win-server-2012`  
   - **Variables** (YAML):  
     ```yaml
     ansible_host: 192.168.2.120
	 ansible_user: AMXUser
	 ansible_password: YourSecurePassword123!
	 ansible_connection: winrm
	 ansible_winrm_transport: basic
	 ansible_winrm_server_cert_validation: ignore
	 ansible_port: 5985
     ansible_winrm_server_cert_validation: ignore
     ```
3. Click **Save**  

---

### **Step 2: Create & Run a Windows Job**
#### **2.1 Create Playbook**
1. Navigate to:  
   **Resources â†’ Projects â†’ Default â†’ Add File**  
2. Name: `win_basic_info.yml`  
3. Content:  
   ```yaml
   ---
   - name: Get Windows System Info
     hosts: all
     gather_facts: no

     tasks:
       - name: Collect system info
         ansible.windows.win_system_info:
         register: win_info

       - name: Display info
         debug:
           var: win_info
   ```
4. Click **Save**  

#### **2.2 Create Job Template**
1. Go to:  
   **Resources â†’ Templates â†’ Add â†’ Job Template**  
2. Configure:  
   - **Name**: `Windows System Info`  
   - **Inventory**: `Windows Servers`  
   - **Project**: `Default`  
   - **Playbook**: `win_basic_info.yml`  
   - **Credentials**: Select your Windows credential  
   - **Options**:  
     - â˜‘ **Enable Privilege Escalation**  
     - â˜‘ **Enable Fact Storage**  
3. Click **Save**  

#### **2.3 Execute the Job**
1. In **Templates**, click **Launch** on `Windows System Info`.  
2. Monitor real-time output in the **Jobs** view.  

**Expected Output**:  
```json
{
  "win_info": {
    "hostname": "WIN-2012",
    "os_version": "6.3.9600",
    "uptime": "1 day, 3 hours"
  }
}
```

---

### **Step 3: Troubleshooting**
#### **3.1 Verify WinRM Connectivity**
```bash
# Test WinRM from AWX server
ansible win-server-2012 -i inventory.ini -m ansible.windows.win_ping -vvv
```
**If fails**:  
- Check Windows Server:  
  ```powershell
  Test-NetConnection -ComputerName 192.168.2.129 -Port 5985
  ```
- Ensure WinRM is running:  
  ```powershell
  Get-Service WinRM
  ```

#### **3.2 Check AWX Logs**
```bash
# View AWX task logs
kubectl logs -n awx -l app.kubernetes.io/name=awx -c awx-task
```

### **Final Notes** 
âœ… **Troubleshooting steps for AWX issues**  

**Next Steps**:  
ðŸ”¹ Schedule automated patch management  
ðŸ”¹ Set up email/Slack notifications  
ðŸ”¹ Explore [Ansible Windows Modules](https://docs.ansible.com/ansible/latest/collections/ansible/windows/)  

Need a **specific Windows automation example**? Ask away! ðŸš€