### **Full Hands-On Guide: AWX Setup, Database Migration & Windows Automation**  
This guide covers **all steps** performed on the **AWX VM**, including:  
âœ… **AWX Installation**  
âœ… **PostgreSQL Database Migration**  
âœ… **Windows Server 2012 Integration**  
âœ… **Job Execution**  

---

## **Step 1: Install AWX in Kubernetes (Kind)**
### **1.1 Create Kind Cluster**
```bash
# Create cluster.yaml
cat <<EOF > cluster.yaml
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
nodes:
- role: control-plane
- role: worker
EOF

# Deploy Kind cluster
kind create cluster --config cluster.yaml
```

### **1.2 Install AWX via Helm**
```bash
# Add AWX Helm repo (if needed)
helm repo add awx-community https://ansible.github.io/awx-helm/

# Install AWX
helm install my-awx awx-community/awx -n awx --create-namespace --values=values.yaml
```

**`values.yaml` (Key Settings):**
```yaml
namespace: awx
postgresql:
  persistence:
    size: 5Gi
service:
  type: NodePort
  nodePort: 31125
```

---

## **Step 2: Database Migration (If Moving to New Namespace)**
### **2.1 Backup Original Database (Default Namespace)**
```bash
kubectl exec my-awx-postgresql-0 -n default -- bash -c 'PGPASSWORD=\$(echo \$POSTGRES_PASSWORD) pg_dump -U awx -d awx' > awx_backup.sql
```

### **2.2 Deploy New AWX in `awx` Namespace**
```bash
helm install my-awx-new awx-community/awx -n awx --create-namespace --values=values-new.yaml
```

### **2.3 Restore Backup to New Database**
```bash
# Copy backup to new PostgreSQL pod
kubectl cp awx_backup.sql awx/my-awx-new-postgresql-0:/tmp/

# Restore data
kubectl exec -it my-awx-new-postgresql-0 -n awx -- bash -c 'PGPASSWORD=\$(echo \$POSTGRES_PASSWORD) psql -U awx -d awx -f /tmp/awx_backup.sql'
```

**Verification:**
```bash
kubectl exec -it my-awx-new-postgresql-0 -n awx -- bash -c 'PGPASSWORD=\$(echo \$POSTGRES_PASSWORD) psql -U awx -d awx -c "SELECT COUNT(*) FROM main_user;"'
```

---

## **Step 3: Configure Windows Server 2012 in AWX**
### **3.1 Prepare Windows Server**
```powershell
# Enable WinRM (Run as Admin)
Enable-PSRemoting -Force
winrm quickconfig -q
winrm set winrm/config/service '@{AllowUnencrypted="true"}'
winrm set winrm/config/service/auth '@{Basic="true"}'
netsh advfirewall firewall add rule name="WinRM-HTTP" dir=in localport=5985 protocol=TCP action=allow

# Create AWX user
net user AWXUser "P@ssw0rd123!" /add
net localgroup Administrators AWXUser /add
```

### **3.2 Add Windows Host to AWX**
1. **AWX UI â†’ Resources â†’ Inventories â†’ Add Host**  
2. **Configure Host Variables (YAML):**
   ```yaml
   ansible_host: 192.168.2.129
   ansible_user: AWXUser
   ansible_password: "P@ssw0rd123!"
   ansible_connection: winrm
   ansible_winrm_transport: basic
   ansible_winrm_port: 5985
   ansible_winrm_server_cert_validation: ignore
   ```

---

## **Step 4: Create & Run a Windows Job**
### **4.1 Create Playbook (`win_basic_info.yml`)**
```yaml
---
- name: Get Windows System Info
  hosts: all
  gather_facts: no

  tasks:
    - name: Collect system info
      ansible.windows.win_system_info:
      register: win_info

    - name: Display info
      debug:
        var: win_info
```

### **4.2 Run Job from AWX UI**
1. **Templates â†’ Add â†’ Job Template**  
   - **Name:** `Windows System Info`  
   - **Inventory:** `Windows Servers`  
   - **Playbook:** `win_basic_info.yml`  
   - **Credentials:** Machine (Windows)  
2. Click **Launch**  

**Expected Output:**  
```json
{
  "win_info": {
    "hostname": "WIN-2012",
    "os_version": "6.3.9600",
    "uptime": "1 day, 3 hours"
  }
}
```

---

## **Step 5: Troubleshooting**
### **5.1 Check WinRM Connectivity**
```bash
ansible win-server-2012 -i inventory.ini -m ansible.windows.win_ping -vvv
```

### **5.2 Verify AWX Logs**
```bash
kubectl logs -n awx -l app.kubernetes.io/name=awx -c awx-task
```

### **5.3 Database Recovery (If Needed)**
```bash
# Export data again
kubectl exec my-awx-postgresql-0 -n awx -- bash -c 'PGPASSWORD=\$(echo \$POSTGRES_PASSWORD) pg_dump -U awx -d awx' > awx_backup_recovery.sql

# Restore to another instance
kubectl exec -i new-postgres-pod -- psql -U awx -d awx < awx_backup_recovery.sql
```

---

## **Final Notes**
âœ… **AWX installed in Kubernetes**  
âœ… **Database migrated successfully**  
âœ… **Windows Server 2012 integrated**  
âœ… **Jobs executed via AWX UI**  

Next Steps:  
ðŸ”¹ Schedule automated jobs  
ðŸ”¹ Set up notifications (Email/Slack)  
ðŸ”¹ Explore more Windows modules (`win_copy`, `win_service`)  

Would you like a **Windows Patch Management** playbook example? ðŸš€